plugins {
    id 'net.neoforged.moddev' version '1.0.14'
}


archivesBaseName = project.archives_base_name
version = "${project.minecraft_version}-${new File('version').text.trim()}"
group = project.maven_group

repositories {
    mavenLocal() {
        content {
            includeGroup "com.hollingsworth.ars_nouveau"
        }
    }
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
    maven {
        name = 'GeckoLib'
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
        content {
            includeGroup("software.bernie.geckolib")
        }
    }
    maven {
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        name = 'Forge'
        url = "https://maven.minecraftforge.net"
    }
    maven {
        name = "OctoStudios"
        url = uri("https://maven.octo-studios.com/releases")
    }
    maven {
        name = "Illusive Soulworks maven"
        url = "https://maven.theillusivec4.top/"
    }
    exclusiveContent {
        forRepository {
            maven {
                url "https://cursemaven.com"
            }
        }
        filter {
            includeGroup "curse.maven"
        }
    }
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    implementation "com.hollingsworth.ars_nouveau:ars_nouveau-${project.minecraft_version}:${project.ars_version}"
    implementation "software.bernie.geckolib:geckolib-neoforge-${project.mc_version}:${project.gecko_version}"
    implementation "vazkii.patchouli:Patchouli:${project.mc_version}-${project.patchouli_version}"

    compileOnly "mezz.jei:jei-${project.mc_version}-neoforge-api:${project.jei_version}"
    implementation "mezz.jei:jei-${project.mc_version}-neoforge:${project.jei_version}"

    implementation "top.theillusivec4.curios:curios-neoforge:${project.curios_version}+${project.mc_version}"
    implementation "com.github.glitchfiend:TerraBlender-neoforge:${project.mc_version}-${project.terrablender_version}"

    compileOnly "maven.modrinth:async-locator:${project.asynclocator_version}"
}

neoForge {
    version = project.neoforge_version

    validateAccessTransformers = true

    runs {
        client {
            client()
        }
        data {
            data()
            programArguments.addAll("--all", "--mod", "ars_additions", "--existing-mod", "ars_nouveau", "--existing", file("src/main/resources").absolutePath, "--output", file("src/generated").absolutePath)
        }
        server {
            server()
        }
    }

    mods {
        ars_additions {
            sourceSet sourceSets.main
        }
    }

    parchment {
        minecraftVersion = project.mc_version
        mappingsVersion = project.parchment_mappings
    }
}